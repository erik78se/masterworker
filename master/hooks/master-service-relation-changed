#!/usr/bin/env python3
import os
import sys
sys.path.insert(0, os.path.join(os.environ['CHARM_DIR'], 'lib'))
import hookenv

def master_service_relation_changed():
    """
    This hook is called when data changes on the relation
    from remote units and where we can access those.

    juju relate master worker
         ->(created)->
                      (joined)->
                                (changed)->
    """
    hookenv.log(" ========= hook: master-service-relation-changed  ========")

    # For the master-service relation, get all relation_ids
    # TODO: dont use the name since we are in a relation
    rel_ids = hookenv.relation_ids('master-service')

    # Get the first one since we expect to only have one master-service relation.
    master_service_rel_id = rel_ids[0]

    # Get all the related units
    units = hookenv.related_units(master_service_rel_id)

    # Show how many related units we have.
    hookenv.status_set("active", f"Related Workers: {len(units)}")
            
if __name__ == "__main__":
    master_service_relation_changed()
