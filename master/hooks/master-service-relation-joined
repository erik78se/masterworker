#!/usr/bin/env python3
import os
import sys
sys.path.insert(0, os.path.join(os.environ['CHARM_DIR'], 'lib'))
import hookenv
import random

def generateWorkerKey():
    """Return a random key of length 4,
    which will be passed as new workers join."""
    return ''.join(random.choice('0123456789ABCDEF') for i in range(4))

def master_service_relation_joined():
    """
    This hook is called when the unit is up and we can access its
    private-address, but interface data from remote units are not to be
    expected to be available at this stage.

    $ juju relate master worker
         ->(created)->
                      (joined)->
                                (changed)->

    A unique key is generated here based on the remote unit name
    E.g. worker/0-master-key and the value will be a generated key
    """

    hookenv.log(" ========= hook: master-service-relation-joined  ========")

    relation_id = hookenv.relation_id()

    _wk = generateWorkerKey()

    remoteUnitName=os.environ['JUJU_REMOTE_UNIT']

    relation_data = { f"{remoteUnitName}-worker-key": _wk }

    hookenv.relation_set(relation_id,
                         relation_settings=relation_data )

if __name__ == "__main__":
    master_service_relation_joined()